{
  "name": "react-template",
  "version": "4.0.2",
  "private": true,
  "description": "",
  "main": "build/server.js",
  "engines": {
    "node": ">=6.4.x <9",
    "npm": ">=4.5.x",
    "yarn": "0.27.5"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/tribou/react-template.git"
  },
  "author": "tribou",
  "license": "Apache-2.0",
  "homepage": "https://github.com/tribou/react-template#readme",
  "devDependencies": {
    "@webpack-blocks/webpack2": "^0.4.0",
    "assets-webpack-plugin": "^3.4.0",
    "autoprefixer": "^6.4.0",
    "babel-cli": "^6.26.0",
    "babel-core": "^6.26.0",
    "babel-eslint": "^7.2.3",
    "babel-jest": "^20.0.3",
    "babel-loader": "^7.1.2",
    "babel-plugin-transform-class-properties": "^6.11.5",
    "babel-plugin-transform-object-assign": "^6.8.0",
    "babel-preset-env": "^1.5.2",
    "babel-preset-react": "^6.11.1",
    "babel-preset-stage-3": "^6.11.0",
    "babel-register": "^6.26.0",
    "browser-sync": "^2.18.13",
    "browser-sync-webpack-plugin": "^1.1.2",
    "chunk-manifest-webpack-plugin": "^1.1.2",
    "compression-webpack-plugin": "^1.0.0",
    "concurrently": "^3.5.0",
    "copy-webpack-plugin": "^4.0.1",
    "cross-env": "^5.0.5",
    "css-loader": "^0.28.5",
    "css-modules-require-hook": "^4.0.6",
    "enzyme": "^2.9.1",
    "enzyme-to-json": "^1.4.5",
    "eslint": "^4.5.0",
    "eslint-import-resolver-webpack": "^0.8.3",
    "eslint-loader": "^1.8.0",
    "eslint-plugin-tribou": "^1.2.2",
    "extract-text-webpack-plugin": "^3.0.0",
    "favicons-webpack-plugin": "0.0.7",
    "file-loader": "^0.11.2",
    "flow-bin": "^0.53.1",
    "glob": "^7.1.2",
    "husky": "^0.14.3",
    "identity-obj-proxy": "^3.0.0",
    "imageoptim-cli": "^1.14.8",
    "jest": "^20.0.4",
    "jest-serializer-path": "^0.1.2",
    "json-loader": "^0.5.7",
    "node-notifier": "^5.1.2",
    "node-notifier-cli": "^1.0.1",
    "nodemon": "^1.10.2",
    "nsp": "^2.7.0",
    "offline-plugin": "^4.8.3",
    "postcss-calc": "^5.3.1",
    "postcss-loader": "^2.0.6",
    "precss": "^1.4.0",
    "react-addons-perf": "^15.4.1",
    "react-test-renderer": "^15.6.1",
    "rimraf": "^2.5.4",
    "url-loader": "^0.5.9",
    "webpack": "^3.5.5",
    "webpack-blocks-split-vendor": "^0.2.0",
    "webpack-chunk-hash": "^0.4.0",
    "webpack-node-externals": "^1.3.3"
  },
  "dependencies": {
    "axios": "^0.16.2",
    "babel-polyfill": "^6.26.0",
    "boom": "^5.2.0",
    "classnames": "^2.2.5",
    "cookies-js": "^1.2.3",
    "debug": "^2.6.8",
    "good": "^7.2.0",
    "good-console": "^6.4.0",
    "good-squeeze": "^5.0.1",
    "hapi": "^16.5.2",
    "hapi-react-views": "^9.3.0",
    "inert": "^4.2.1",
    "js-base64": "^2.1.9",
    "lodash": "^4.17.4",
    "material-ui": "^0.19.0",
    "qs": "^6.5.0",
    "react": "^15.6.1",
    "react-dom": "^15.6.1",
    "react-helmet": "^5.1.3",
    "react-redux": "^5.0.6",
    "react-router": "^4.1.2",
    "react-router-dom": "^4.1.2",
    "react-tap-event-plugin": "^2.0.1",
    "recompose": "^0.25.0",
    "redux": "^3.7.2",
    "redux-devtools-extension": "^2.13.0",
    "redux-form": "^6.8.0",
    "redux-logger": "^3.0.6",
    "redux-observable": "^0.16.0",
    "redux-promise-middleware": "4.2.1",
    "redux-thunk": "^2.1.0",
    "reselect": "^3.0.1",
    "rollbar": "^2.2.3",
    "rxjs": "^5.4.3",
    "sanitize.css": "^5.0.0",
    "secure-filters": "^1.1.0",
    "source-map-support": "^0.4.16",
    "tachyons-clears": "^3.0.4",
    "tachyons-display": "^5.0.4",
    "tachyons-flexbox": "^2.0.5",
    "tachyons-position": "^6.0.6",
    "tachyons-spacing": "^6.0.4",
    "tachyons-text-align": "^3.1.0",
    "tachyons-vertical-align": "^4.0.5",
    "tachyons-widths": "^5.2.1",
    "vision": "^4.1.0"
  },
  "jest": {
    "verbose": true,
    "testRegex": "/(config|src|server)/.*_test\\.js$",
    "moduleNameMapper": {
      "\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$": "<rootDir>/__mocks__/fileMock.js",
      "\\.(css)$": "identity-obj-proxy"
    },
    "moduleDirectories": [
      "node_modules",
      "<rootDir>"
    ],
    "snapshotSerializers": [
      "enzyme-to-json/serializer",
      "jest-serializer-path"
    ]
  },
  "scripts": {
    "prepush": "npm test",
    "heroku-postbuild": "npm run build",
    "init": "heroku git:remote -a my-app -r prod && heroku git:remote -a my-app-staging -r staging",
    "notify-optimize": "notify --icon 'https://imageoptim.com/icon.png' -t 'ImageOptim' -m 'Image optimization complete'",
    "preversion": "IMAGE_FILES=$(git diff --name-only $(git describe --abbrev=0 --tags)..HEAD static/images/); if [ $(echo \"$IMAGE_FILES\" | grep . | wc -l) -ne 0 ]; then echo \"$IMAGE_FILES\" | imageOptim && git add --all static/images && npm run --silent notify-optimize; fi",
    "upgrade-deps": "npm run yarn-bin -- cache clean && rm -rf node_modules .npm-packages-offline-cache flow-typed && rm yarn.lock && npm run yarn && flow-typed install && cat yarn.lock | grep registry",
    "start": "node build/server.js",
    "start-prod": "time npm run --silent build && date && cross-env NODE_ENV=production npm start",
    "build": "rimraf build && cross-env NODE_ENV=production webpack",
    "deploy-prod": "heroku pipelines:promote -a my-app-staging",
    "lsp": "heroku releases -a my-app",
    "lss": "heroku releases -a my-app-staging",
    "dev": "npm run yarn && rimraf build && concurrently -n 'APP,FLOW' -p '[{name}]' 'cross-env DEBUG=my-app* DEBUG_COLORS=true NODE_ENV=development nodemon -x node server/dev.index.js' 'npm run --silent watch-flow'",
    "dev-mock": "npm run yarn && rimraf build && concurrently -n 'APP,FLOW' -p '[{name}]' 'cross-env USE_MOCK_API=true DEBUG=my-app* DEBUG_COLORS=true NODE_ENV=development nodemon -x node server/dev.index.js' 'npm run --silent watch-flow'",
    "flow": "flow; test $? -eq 0 -o $? -eq 2",
    "flow-ci": "flow check .",
    "lint": "eslint --ignore-path .gitignore flow src server config",
    "lint-cache": "eslint --cache --ignore-path .gitignore flow src server config",
    "test": "concurrently -n 'LINT,FLOW,NSP' -p '[{name}]' 'npm run lint' 'npm run --silent flow-ci' 'npm run --silent test-nsp' && npm run --silent test-jest",
    "test-jest": "cross-env NODE_ENV=test jest --coverage",
    "test-nsp": "nsp check",
    "watch": "nodemon -i .eslintcache -x npm run --silent test",
    "watch-flow": "nodemon -w . -i .eslintcache -i build -x npm run --silent flow",
    "watch-lint": "nodemon -w . -i .eslintcache -x npm run --silent lint-cache",
    "watch-test": "cross-env NODE_ENV=test jest --watch --notify --watchman",
    "yarn": "npm run --silent yarn-bin -- install --ignore-scripts",
    "yarn-bin": "node bin/yarn-${npm_package_engines_yarn}.js"
  }
}
